class Solution
{
    public:
    //Function to check whether a Binary Tree is BST or not.
    void solve(Node* root,vector<int> &v){
        if(root==NULL){
            return;
        }
        solve(root->left,v);
        v.push_back(root->data);
        solve(root->right,v);
    }
    bool isBST(Node* root) 
    {
        // Your code here
        vector<int> v;
        solve(root,v);
       int prev=INT_MIN;
       for(int i=0;i<v.size();i++){
           if(prev>v[i]){
               return false;
           }
           prev=v[i];
       }
       return true;
    }
};

Approach 2 range method
class Solution
{
    public:
    //Function to check whether a Binary Tree is BST or not.
    bool solve(Node* root,int min,int max){
        if(root==NULL){
            return true;
        }
        if(root->data>min && root->data<max){
            bool left=solve(root->left,min,root->data);
            bool right=solve(root->right,root->data,max);
            return left && right;
        }
        else{
            return false;
        }
    }
    bool isBST(Node* root) 
    {
        // Your code here
        return solve(root,INT_MIN,INT_MAX);
    }
};

